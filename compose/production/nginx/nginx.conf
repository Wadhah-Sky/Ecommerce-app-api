# Set Nginx configuration

# Enable dynamic loading of Brotli modules with the load_module.
# Note: we commented the load step of 'Brotli' module because we do it in Dockerfile.
# load_module modules/ngx_http_brotli_filter_module.so; # for compressing responses on-the-fly
# load_module modules/ngx_http_brotli_static_module.so; # for serving pre-compressed files

# Set user name,
# Note: the preferred user for Nginx to run as actually differs between operating systems.
#       Sometimes Nginx is supposed to run as www-data. Other times it is actually supposed to run as nobody.
#       On some operating systems (such as Windows), it doesn't even matter, and the user line in nginx.conf can
#       be commented out or entirely excluded.
#       An Nginx user is required for the system to access and modify folders and files related to our application
#       and website. By default nginx uses 'www-data' user for the website and application; it is also the same user
#       name that was used by the server of Apache.
# Important: www-data or nginx user have no write permission to errors.log file, so if connected this log with host
#            machine will face issue of not existing file of "/var/log/nginx/error.log".
user  nginx;

# Note: In NGINX, a worker process handles every web server request in other
#       mean it's a single-threaded process.
#       To manage the request, a worker process will be generated as multiple
#       worker processes, and a master process manages all of them and analyzes the
#       setup. The worker process parameter is on auto in NGINX's standard
#       configuration.
#       If Nginx is doing CPU-intensive work such as SSL or gzipping and you have 2 or
#       more CPUs/cores, then you may set worker_processes to be equal to the number of CPUs or cores.
#       If you are serving a lot of static files and the total size of the files is bigger than the
#       available memory, then you may increase worker_processes to fully utilize disk bandwidth.
#       Also it's possible to set to auto, to automatically adjust the number of Nginx worker processes
#       based on available cores.
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    # worker_connections is the maximum number of simultaneous connections a worker can open, be this to
    # clients or to backend servers (in case of proxying). So if you are using nginx as a reverse proxy,
    # the result of (worker_processes * worker_connections) is not necessarily the number of clients you can serve.
    # Note: Each worker process can open by default 512 connections.

    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;
    error_log   /var/log/nginx/error.log warn;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # gzip is a popular data compression program. You can configure Nginx to use gzip to compress
    # the files it serves on the fly.
    gzip  on;

    # The 'server_tokens' directive is responsible for displaying the NGINX version number and operating
    # system version on error pages and in the 'Server' HTTP response header field. This information should
    # not be displayed. We can set server_tokens in http, server, or location context only.
    server_tokens off;

    # Enable Brotli compression and perform additional configuration as required by the 'ngx_brotli' module.
    # Brotli compression can be configured on the http, server or location levels.
    # Note: we commented the following step of 'Brotli' configuration because we configure it in Dockerfile directly
    #       into '/etc/nginx/conf.d/brotli.conf'.
    # brotli on;
	# brotli_static on;        # for static compression,
	# brotli_comp_level 6;    # this setting can vary from 1-11
	# brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

    include /etc/nginx/conf.d/*.conf;
}