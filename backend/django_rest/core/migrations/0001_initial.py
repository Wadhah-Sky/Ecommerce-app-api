# Generated by Django 4.0.10 on 2023-03-25 01:28

import core.models
from django.conf import settings
import django.contrib.postgres.fields.citext
import django.contrib.postgres.fields.hstore
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
import djmoney.models.validators
import imagekit.models.fields
import mptt.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Sales', 'Sales'), ('Inventory', 'Inventory'), ('Customer', 'Customer')], default='Customer', max_length=30)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(blank=True, max_length=5)),
                ('street_number', models.CharField(blank=True, max_length=3)),
                ('address_line_1', models.CharField(max_length=100)),
                ('address_line_2', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=85)),
                ('region', models.CharField(max_length=85)),
                ('postal_code', models.CharField(blank=True, max_length=8)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('title', django.contrib.postgres.fields.citext.CICharField(max_length=25, unique=True)),
                ('input_class', models.CharField(choices=[('option-checkbox', 'option-checkbox'), ('option-btn', 'option-btn'), ('option-color', 'option-color'), ('option-rise-picker', 'option-rise-picker')], default='check-input', max_length=20)),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaf_nodes', to='core.attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(upload_to=core.models.create_image_file_path)),
                ('title', models.CharField(max_length=40, unique=True)),
                ('frontend_path', models.CharField(blank=True, max_length=200)),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True, unique=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(upload_to=core.models.create_image_file_path)),
                ('title', models.CharField(max_length=40)),
                ('summary', models.TextField(max_length=150)),
                ('frontend_link_text', models.CharField(default='Shop now', max_length=25)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('title', models.CharField(max_length=30)),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('IRQ', 'Iraq')], max_length=56, unique=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('class_attribute_value', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(upload_to=core.models.create_image_file_path)),
                ('title', models.TextField(max_length=100, unique=True)),
                ('summary', models.TextField(max_length=400)),
                ('details', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products_category', to='core.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('is_common_attribute', models.BooleanField(default=True, help_text='By selecting this option as True, means this attribute option will not show within the product item attribute suggestions for attribute_option field')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes_attribute', to='core.attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes_product', to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('title', models.CharField(max_length=25, unique=True)),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True, unique=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('sku', models.CharField(max_length=12, unique=True)),
                ('list_price_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'USD $')], default='USD', editable=False, max_length=3)),
                ('list_price', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='USD', max_digits=8, validators=[djmoney.models.validators.MinMoneyValidator({'USD': 1}), djmoney.models.validators.MaxMoneyValidator({'USD': 5000})])),
                ('is_default', models.BooleanField(default=False, help_text='You should set at least one True value and no more than one')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_items_product', to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('title', models.CharField(help_text='Can be use as coupon code, on frontend it is contained inside red colored block', max_length=12, unique=True)),
                ('summary', models.TextField(blank=True, help_text='on frontend it is contained inside white colored block next to title promotion block', max_length=21)),
                ('discount_percentage', models.DecimalField(decimal_places=0, default='0', help_text='%', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('promotion_type', models.CharField(choices=[('Deal', 'Deal'), ('Coupon', 'Coupon')], default='Deal', max_length=12)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('title', models.CharField(max_length=30, unique=True)),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True, unique=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('title', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('contact_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_addresses_address', to='core.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_addresses_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Address',
                'verbose_name_plural': 'User Addresses',
            },
        ),
        migrations.CreateModel(
            name='SupplierAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_addresses_address', to='core.address')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_addresses_supplier', to='core.supplier')),
            ],
            options={
                'verbose_name': 'Supplier Address',
                'verbose_name_plural': 'Supplier Addresses',
            },
        ),
        migrations.CreateModel(
            name='SectionCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_cards_card', to='core.card')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_cards_section', to='core.section')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('po_code', models.CharField(max_length=50, verbose_name='PO code')),
                ('summary', models.TextField(blank=True, max_length=255)),
                ('discount_percentage', models.DecimalField(decimal_places=0, default='0', help_text='%', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tax_percentage', models.DecimalField(decimal_places=0, default='0', help_text='%', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tax_fulfill', models.CharField(choices=[('After discount', 'After discount'), ('Before discount', 'Before discount')], default='After discount', max_length=20)),
                ('status', models.CharField(choices=[('Processing', 'Processing'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Returned', 'Returned')], default='Processing', max_length=20)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders_supplier', to='core.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PromotionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_items_product_item', to='core.productitem')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_items_promotion', to='core.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='PromotionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_categories_category', to='core.category')),
                ('promotion', models.ForeignKey(help_text='Make sure the selected promotion will be used only for the selected category, so, when you delete this promotion will be deleted from products items too without issue', on_delete=django.db.models.deletion.CASCADE, related_name='promotion_categories_promotion', to='core.promotion')),
            ],
            options={
                'verbose_name': 'Promotion Category',
                'verbose_name_plural': 'Promotion Categories',
            },
        ),
        migrations.CreateModel(
            name='ProductItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(upload_to=core.models.create_image_file_path)),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_item_images_product_item', to='core.productitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductItemAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100)),
                ('thumbnail', imagekit.models.fields.ProcessedImageField(blank=True, upload_to=core.models.create_image_file_path)),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_item_attributes_product_attribute', to='core.productattribute')),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_item_attributes_product_item', to='core.productitem')),
            ],
        ),
        migrations.AddField(
            model_name='productitem',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_items_supplier', to='core.supplier'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_product_group', to='core.productgroup'),
        ),
        migrations.CreateModel(
            name='POItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('price_per_unit_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'USD $')], default='USD', editable=False, max_length=3)),
                ('price_per_unit', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='USD', help_text='You can set the value or automatically will set as product item current price', max_digits=8, validators=[djmoney.models.validators.MinMoneyValidator({'USD': 1}), djmoney.models.validators.MaxMoneyValidator({'USD': 5000})])),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='po_items_product_item', to='core.productitem')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_items_purchase_order', to='core.purchaseorder')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_attributes_attribute', to='core.attribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_attributes_category', to='core.category')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='icon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_categories_icon', to='core.icon'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaf_nodes', to='core.category'),
        ),
        migrations.AddField(
            model_name='card',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards_category', to='core.category'),
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Addresses_country', to='core.country'),
        ),
        migrations.AddConstraint(
            model_name='useraddress',
            constraint=models.UniqueConstraint(fields=('user', 'address'), name='user_address_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='useraddress',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('user',), name='one_default_address_per_user'),
        ),
        migrations.AddConstraint(
            model_name='supplieraddress',
            constraint=models.UniqueConstraint(fields=('supplier', 'address'), name='supplier_address_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='supplieraddress',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('supplier',), name='one_default_address_per_supplier'),
        ),
        migrations.AddConstraint(
            model_name='sectioncard',
            constraint=models.UniqueConstraint(fields=('section', 'card'), name='section_card_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='promotionitem',
            constraint=models.UniqueConstraint(fields=('promotion', 'product_item'), name='promotion_item_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='promotioncategory',
            constraint=models.UniqueConstraint(fields=('promotion', 'category'), name='promotion_category_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='productitem',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('product',), name='one_default_item_per_product'),
        ),
        migrations.AddConstraint(
            model_name='productattribute',
            constraint=models.UniqueConstraint(fields=('product', 'attribute'), name='product_attribute_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='poitem',
            constraint=models.UniqueConstraint(fields=('purchase_order', 'product_item'), name='po_item_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='categoryattribute',
            constraint=models.UniqueConstraint(fields=('category', 'attribute'), name='category_attribute_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('parent', 'title'), name='category_unique_appversion'),
        ),
        migrations.AddConstraint(
            model_name='attribute',
            constraint=models.UniqueConstraint(fields=('parent', 'title'), name='attribute_unique_appversion'),
        ),
    ]
